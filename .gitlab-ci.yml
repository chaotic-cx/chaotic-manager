---
stages: [checks, build]

check-lint:
  # Check all files for common anti-patterns and issues
  stage: checks
  image: alpine:latest
  inherit:
    variables: false
  script:
    - apk add --no-cache --upgrade bash npm py3-pip shellcheck shfmt
    # Pass --break-system-packages since since this containers sole purpose is
    # running 2 applications. If we get to advance this, implement a proper venv
    - pip install --break-system-packages yamllint
    - npm install -g markdownlint-cli
    - bash .ci/lint.sh || true # be graceful for now

check-pr-commitizen:
  # Check the current commit message for compliance with commitizen
  stage: checks
  image: alpine:latest
  inherit:
    variables: false
  script:
    - apk add --no-cache --upgrade py3-pip
    # Pass --break-system-packages since since this containers sole purpose is
    # running 2 applications. If we get to advance this, implement a proper venv
    - pip install --break-system-packages commitizen
    - cz check --message "$CI_COMMIT_MESSAGE" >/tmp/cz_check || true # why does it return 1 if its actually 0?
    - grep "successful" /tmp/cz_check # ugly hack to workaround the above issue

build-builder:
  # Used to deploy a new base Docker image for building purposes
  # this one runs once per day via pipeline schedules
  stage: build
  image: docker:24-cli
  services:
    - name: docker:24-dind
      alias: docker-daemon
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE/builder:latest" ./builder-container
    - docker push "$CI_REGISTRY_IMAGE/builder:latest"
  tags: ["dind"]
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker-daemon:2375/
    DOCKER_TLS_CERTDIR: ""

build-manager:
  stage: build
  image: docker:24-cli
  services:
    - name: docker:24-dind
      alias: docker-daemon
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE/manager:latest" .
    - docker push "$CI_REGISTRY_IMAGE/manager:latest"
  tags: ["dind"]
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker-daemon:2375/
    DOCKER_TLS_CERTDIR: ""
  rules:
  - if: $UPDATE_BUILDER != "1"